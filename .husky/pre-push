#!/usr/bin/env bash
# .husky/pre-push ‚Äî NON BLOQUANT / ZERO INTERACTION
# - G√©n√®re un rapport HTML local
# - Ouvre le rapport dans le navigateur (en arri√®re-plan si possible)
# - NE BLOQUE JAMAIS le push (exit 0 inconditionnel)

set +e
set +o pipefail

REPORT_DIR=".husky/logs"
REPORT_FILE="$REPORT_DIR/last-prepush-report.html"
mkdir -p "$REPORT_DIR" 2>/dev/null || true

have() { command -v "$1" >/dev/null 2>&1; }

status_cell() {
  case "$1" in
    ok)   echo "<td class='ok'>‚úÖ OK</td>";;
    warn) echo "<td class='warn'>‚ö†Ô∏è Warning</td>";;
    err)  echo "<td class='err'>‚ùå Error</td>";;
    *)    echo "<td>$1</td>";;
  esac
}

row() {
  local LABEL="$1" STATUS="$2" RECO="$3" LINK="$4"
  echo "<tr><td>$LABEL</td>$(status_cell "$STATUS")<td>$RECO</td><td><a href='$LINK' target='_blank'>link</a></td></tr>" >> "$REPORT_FILE"
}

abs_path() {
  if have realpath; then realpath "$1"
  else (cd "$(dirname "$1")" && pwd)/"$(basename "$1")"; fi
}

open_report_bg() {
  local ABS FILE_URL
  ABS="$(abs_path "$REPORT_FILE")"
  FILE_URL="file://$ABS"

  # macOS
  if have open; then
    if [ -d "/Applications/Google Chrome.app" ]; then
      nohup open -a "Google Chrome" "$ABS" >/dev/null 2>&1 &
    else
      nohup open "$ABS" >/dev/null 2>&1 &
    fi
  # Linux
  elif have xdg-open; then
    if have google-chrome; then
      nohup google-chrome "$ABS" >/dev/null 2>&1 &
    elif have chromium; then
      nohup chromium "$ABS" >/dev/null 2>&1 &
    else
      nohup xdg-open "$ABS" >/dev/null 2>&1 &
    fi
  # Git Bash/Windows (best effort)
  elif have start; then
    start "" "$ABS" >/dev/null 2>&1
  fi

  echo "üîó Rapport: file://$ABS"
}

# ---------- G√©n√©ration HTML ----------
cat > "$REPORT_FILE" <<'EOF'
<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<title>Husky Pre-push Report</title>
<style>
  body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; background:#181A20; color:#EEE; padding:20px; }
  h1 { color:#22C55E; margin:0 0 8px; }
  #subtitle { color:#9aa3b2; margin:0 0 16px; }
  table { width:100%; border-collapse:collapse; margin-top:12px; }
  th, td { padding:10px; border:1px solid #333; text-align:left; }
  th { background:#222; }
  .ok { color:#22C55E; font-weight:bold; }
  .warn { color:#FACC15; font-weight:bold; }
  .err { color:#EF4444; font-weight:bold; }
  a { color:#22C55E; font-weight:bold; text-decoration:none; }
  a:hover { text-decoration:underline; }
  .summary { margin-top:18px; padding:12px; background:#11151c; border:1px solid #2a2f3a; border-radius:8px; }
</style>
</head>
<body>
<h1>üö¶ Husky Pre-push Report</h1>
<p id="subtitle">R√©sum√© ultra-rapide (non bloquant).</p>
<table>
<tr><th>V√©rification</th><th>Statut</th><th>Recommandation</th><th>Docs</th></tr>
EOF

# Checks l√©gers (d√©tection uniquement, pas d‚Äôex√©cution)
NODE_V="$(node -v 2>/dev/null)"; if [ -n "$NODE_V" ]; then
  row "Node pr√©sent ($NODE_V)" ok "OK" "https://nodejs.org"
else
  row "Node non trouv√©" warn "Installer Node (>=18) quand tu peux" "https://nodejs.org/en/download"
fi

if have pnpm; then PM="pnpm"
elif have yarn; then PM="yarn"
elif have npm; then PM="npm"
else PM="-"; fi
if [ "$PM" = "-" ]; then
  row "Package manager" warn "Installe pnpm/yarn/npm" "https://pnpm.io / https://yarnpkg.com / https://docs.npmjs.com"
else
  row "Package manager d√©tect√©" ok "Utilisation de $PM" "#"
fi

if [ -f pnpm-lock.yaml ] || [ -f yarn.lock ] || [ -f package-lock.json ]; then
  row "Lockfile" ok "OK" "#"
else
  row "Lockfile" warn "Cr√©e un lockfile pour des builds reproductibles" "#"
fi

if [ -f package.json ]; then
  row "Lint" warn "Tu peux lancer '$PM run lint' plus tard si besoin" "cmd:$PM run lint"
else
  row "package.json" ok "Projet non JS/TS : rien √† faire" "#"
fi

cat >> "$REPORT_FILE" <<'EOF'
</table>
<div class="summary">
  <p>‚úÖ Conclusion : push autoris√©. Ce hook n'est jamais bloquant.</p>
</div>
</body></html>
EOF

# Ouvre en arri√®re-plan sans bloquer
open_report_bg || true

echo "‚úÖ [husky] Pre-push non-bloquant ex√©cut√©. Le push continue."
exit 0
