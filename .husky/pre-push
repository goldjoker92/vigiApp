#!/usr/bin/env sh
# .husky/pre-push ‚Äî NON BLOQUANT / ZERO INTERACTION / WINDOWS-FRIENDLY
# - G√©n√®re un rapport HTML local
# - Essaie d‚Äôouvrir le rapport :
#     * Windows: PowerShell Start-Process
#     * macOS:   open (Chrome si pr√©sent)
#     * Linux:   xdg-open/chrome/chromium
# - NE BLOQUE JAMAIS le push (exit 0 inconditionnel)

# Ne jamais stopper sur erreurs
set +e

REPORT_DIR=".husky/logs"
REPORT_FILE="$REPORT_DIR/last-prepush-report.html"
mkdir -p "$REPORT_DIR" 2>/dev/null || true

have() { command -v "$1" >/dev/null 2>&1; }

status_cell() {
  case "$1" in
    ok)   printf "<td class='ok'>‚úÖ OK</td>";;
    warn) printf "<td class='warn'>‚ö†Ô∏è Warning</td>";;
    err)  printf "<td class='err'>‚ùå Error</td>";;
    *)    printf "<td>%s</td>" "$1";;
  esac
}

row() {
  LABEL="$1"; STATUS="$2"; RECO="$3"; LINK="$4"
  printf "<tr><td>%s</td>%s<td>%s</td><td><a href='%s' target='_blank'>link</a></td></tr>\n" \
    "$LABEL" "$(status_cell "$STATUS")" "$RECO" "$LINK" >> "$REPORT_FILE"
}

# R√©solution de chemin ABSOLU s√ªre pour Windows via PowerShell si possible
abs_path_win() {
  powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "(Resolve-Path '$1').Path" 2>/dev/null | tr -d '\r'
}

# Ouvre le fichier rapport en arri√®re-plan sans jamais bloquer
open_report_bg() {
  ABS=""

  if have powershell.exe; then
    ABS="$(abs_path_win "$REPORT_FILE")"
    [ -z "$ABS" ] && ABS="$PWD/$REPORT_FILE"
    # Ouvre dans le navigateur par d√©faut
    powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Start-Process '$ABS'" >/dev/null 2>&1
  elif have open; then
    ABS="$PWD/$REPORT_FILE"
    if [ -d "/Applications/Google Chrome.app" ]; then
      nohup open -a "Google Chrome" "$ABS" >/dev/null 2>&1 &
    else
      nohup open "$ABS" >/dev/null 2>&1 &
    fi
  elif have xdg-open; then
    ABS="$PWD/$REPORT_FILE"
    if have google-chrome; then
      nohup google-chrome "$ABS" >/dev/null 2>&1 &
    elif have chromium; then
      nohup chromium "$ABS" >/dev/null 2>&1 &
    else
      nohup xdg-open "$ABS" >/dev/null 2>&1 &
    fi
  else
    ABS="$PWD/$REPORT_FILE"
  fi

  # Affiche un lien file:// cliquable dans beaucoup de terminaux
  printf "üîó Rapport: %s\n" "file://$ABS"
}

# ---------- G√©n√©ration HTML ----------
cat > "$REPORT_FILE" <<'EOF'
<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<title>Husky Pre-push Report</title>
<style>
  body { font-family: system-ui, -apple-system, Segoe UI, Roboto, sans-serif; background:#181A20; color:#EEE; padding:20px; }
  h1 { color:#22C55E; margin:0 0 8px; }
  #subtitle { color:#9aa3b2; margin:0 0 16px; }
  table { width:100%; border-collapse:collapse; margin-top:12px; }
  th, td { padding:10px; border:1px solid #333; text-align:left; }
  th { background:#222; }
  .ok { color:#22C55E; font-weight:bold; }
  .warn { color:#FACC15; font-weight:bold; }
  .err { color:#EF4444; font-weight:bold; }
  a { color:#22C55E; font-weight:bold; text-decoration:none; }
  a:hover { text-decoration:underline; }
  .summary { margin-top:18px; padding:12px; background:#11151c; border:1px solid #2a2f3a; border-radius:8px; }
</style>
</head>
<body>
<h1>üö¶ Husky Pre-push Report</h1>
<p id="subtitle">R√©sum√© ultra-rapide (non bloquant).</p>
<table>
<tr><th>V√©rification</th><th>Statut</th><th>Recommandation</th><th>Docs</th></tr>
EOF

# D√©tections l√©g√®res (aucune commande lourde ex√©cut√©e)
NODE_V="$(node -v 2>/dev/null)"
if [ -n "$NODE_V" ]; then
  row "Node pr√©sent ($NODE_V)" ok "OK" "https://nodejs.org"
else
  row "Node non trouv√©" warn "Installe Node (>=18) quand tu peux" "https://nodejs.org/en/download"
fi

if have pnpm; then PM="pnpm"
elif have yarn; then PM="yarn"
elif have npm; then PM="npm"
else PM="-"; fi
if [ "$PM" = "-" ]; then
  row "Package manager" warn "Installe pnpm/yarn/npm" "https://pnpm.io / https://yarnpkg.com / https://docs.npmjs.com"
else
  row "Package manager d√©tect√©" ok "Utilisation de $PM" "#"
fi

if [ -f pnpm-lock.yaml ] || [ -f yarn.lock ] || [ -f package-lock.json ]; then
  row "Lockfile" ok "OK" "#"
else
  row "Lockfile" warn "Cr√©e un lockfile pour des builds reproductibles" "#"
fi

if [ -f package.json ]; then
  row "Lint" warn "Lance '$PM run lint' quand tu veux" "cmd:$PM run lint"
else
  row "package.json" ok "Projet non JS/TS : rien √† faire" "#"
fi

cat >> "$REPORT_FILE" <<'EOF'
</table>
<div class="summary">
  <p>‚úÖ Conclusion : push autoris√©. Ce hook n'est jamais bloquant.</p>
</div>
</body></html>
EOF

# Ouvre le rapport en arri√®re-plan (sans bloquer le push)
open_report_bg || true

echo "‚úÖ [husky] Pre-push non-bloquant ex√©cut√©. Le push continue."
exit 0
