{
  "sourceFile": "utils/deeplinks.js",
  "activeCommit": 0,
  "commits": [
    {
      "activePatchIndex": 2,
      "patches": [
        {
          "date": 1758951889135,
          "content": "Index: \n===================================================================\n--- \n+++ \n"
        },
        {
          "date": 1758951941252,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,10 @@\n           : `https://wa.me/?text=${enc(msg)}`;\n         console.log('[WA] ANDROID → wa.me (business)');\n         await openUrl(urlBusiness);\n         return;\n+      } catch (e3) {\n+        console.warn('[WA] business KO:', e3?.message || e3);\n       }\n       return;\n     }\n \n"
        },
        {
          "date": 1758951992693,
          "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,16 +69,14 @@\n       } catch (e2) {\n         console.warn('[WA] web KO, fallback business:', e2?.message || e2);\n       }\n \n-      // 3) business\n+      // 3) business fallback (use wa.me again)\n       try {\n-        const { startActivityAsync } = await import('expo-intent-launcher');\n-        console.log('[WA] ANDROID → com.whatsapp.w4b');\n         const urlBusiness = phoneDigits\n           ? `https://wa.me/${phoneDigits}?text=${enc(msg)}`\n           : `https://wa.me/?text=${enc(msg)}`;\n-        console.log('[WA] ANDROID → wa.me (business)');\n+        console.log('[WA] ANDROID → wa.me (business fallback)');\n         await openUrl(urlBusiness);\n         return;\n       } catch (e3) {\n         console.warn('[WA] business KO:', e3?.message || e3);\n"
        }
      ],
      "date": 1758951889135,
      "name": "Commit-0",
      "content": "// utils/deeplinks.js\n// -------------------------------------------------------------\n// Deeplinks robustes (WhatsApp perso prioritaire, Uber, Waze→Maps, News BR, Gmail)\n// - Android: WhatsApp com.whatsapp → web (wa.me) → business\n// - iOS: WhatsApp scheme → web (Apple choisit l’app)\n// - Waze: waze:// → web → (échec) Alert pt-BR -> Google Maps\n// - News BR: ouvre édition brésilienne (pt-BR)\n// - HTTP(S): ouvre direct; fallback expo-web-browser si besoin\n// -------------------------------------------------------------\n\nimport { Platform, Linking, Alert } from 'react-native';\n\n// ---------------- Helpers ----------------\nfunction enc(s) {\n  return encodeURIComponent(String(s || ''));\n}\nfunction digits(s) {\n  return String(s || '').replace(/[^\\d]/g, '');\n}\n\nasync function openUrl(url) {\n  const isHttp = /^https?:\\/\\//i.test(url);\n  try {\n    if (isHttp) {\n      return await Linking.openURL(url);\n    }\n    const can = await Linking.canOpenURL(url);\n    if (!can) {\n      throw new Error('cannot-open:' + url);\n    }\n    return await Linking.openURL(url);\n  } catch (e) {\n    if (isHttp) {\n      try {\n        const WebBrowser = await import('expo-web-browser');\n        return await WebBrowser.openBrowserAsync(url);\n      } catch {}\n    }\n    throw e;\n  }\n}\n\n// ---------------- WhatsApp (perso prioritaire) ----------------\nexport async function openWhatsAppPersonal({ text = '', phone } = {}) {\n  const msg = text || '';\n  const phoneDigits = phone ? digits(phone) : null;\n\n  try {\n    if (Platform.OS === 'android') {\n      // 1) perso\n      try {\n        const url = phoneDigits\n          ? `https://wa.me/${phoneDigits}?text=${enc(msg)}`\n          : `https://wa.me/?text=${enc(msg)}`;\n        console.log('[WA] ANDROID → wa.me');\n        await openUrl(url);\n        return;\n      } catch (e) {\n        console.warn('[WA] perso KO, fallback web:', e?.message || e);\n      }\n\n      // 2) web (wa.me)\n      try {\n        const url = phoneDigits\n          ? `https://wa.me/${phoneDigits}?text=${enc(msg)}`\n          : `https://wa.me/?text=${enc(msg)}`;\n        await openUrl(url);\n        return;\n      } catch (e2) {\n        console.warn('[WA] web KO, fallback business:', e2?.message || e2);\n      }\n\n      // 3) business\n      try {\n        const { startActivityAsync } = await import('expo-intent-launcher');\n        console.log('[WA] ANDROID → com.whatsapp.w4b');\n        const urlBusiness = phoneDigits\n          ? `https://wa.me/${phoneDigits}?text=${enc(msg)}`\n          : `https://wa.me/?text=${enc(msg)}`;\n        console.log('[WA] ANDROID → wa.me (business)');\n        await openUrl(urlBusiness);\n        return;\n      }\n      return;\n    }\n\n    // iOS\n    try {\n      console.log('[WA] iOS → whatsapp://send');\n      const iosUrl = phoneDigits\n        ? `whatsapp://send?phone=${enc(phoneDigits)}&text=${enc(msg)}`\n        : `whatsapp://send?text=${enc(msg)}`;\n      await openUrl(iosUrl);\n      return;\n    } catch (e) {\n      console.warn('[WA] iOS scheme KO, fallback web:', e?.message || e);\n      const webUrl = phoneDigits\n        ? `https://wa.me/${phoneDigits}?text=${enc(msg)}`\n        : `https://wa.me/?text=${enc(msg)}`;\n      await openUrl(webUrl);\n      return;\n    }\n  } catch (e) {\n    console.warn('[WA] open fail:', e?.message || e);\n  }\n}\n\n// ---------------- Uber ----------------\nexport async function openUber() {\n  try {\n    await openUrl('uber://');\n  } catch {\n    await openUrl('https://m.uber.com/ul/'); // UL plus robuste\n  }\n}\n\n// ---------------- Waze (avec prompt pt-BR pour Google Maps) ----------------\nexport async function openWaze({ lat, lng } = {}) {\n  const hasCoords = Number.isFinite(lat) && Number.isFinite(lng);\n  const ll = hasCoords ? `${lat},${lng}` : '';\n\n  // 1) App native\n  const native = hasCoords ? `waze://?ll=${ll}&navigate=yes` : `waze://`;\n  try {\n    await openUrl(native);\n    return;\n  } catch (e) {\n    console.warn('[Waze] native KO -> web', e?.message || e);\n  }\n\n  // 2) Web Waze\n  const web = hasCoords\n    ? `https://www.waze.com/ul?ll=${enc(lat)},${enc(lng)}&navigate=yes`\n    : `https://www.waze.com/ul`;\n  try {\n    await openUrl(web);\n    return;\n  } catch (e2) {\n    console.warn('[Waze] web KO -> prompt Google Maps', e2?.message || e2);\n  }\n\n  // 3) Prompt pt-BR pour basculer sur Google Maps\n  Alert.alert(\n    'Abrir no Google Maps?',\n    'Não consegui conectar ao Waze agora. Quer abrir no Google Maps?',\n    [\n      {\n        text: 'Cancelar',\n        style: 'cancel',\n      },\n      {\n        text: 'Abrir no Google Maps',\n        onPress: async () => {\n          const gmaps = hasCoords\n            ? `https://maps.google.com/?q=${enc(lat)},${enc(lng)}`\n            : `https://maps.google.com/`;\n          try {\n            await openUrl(gmaps);\n          } catch (e3) {\n            console.warn('[Maps] open fail:', e3?.message || e3);\n          }\n        },\n      },\n    ],\n    { cancelable: true },\n  );\n}\n\n// ---------------- Google News (Brasil) ----------------\nexport async function openGoogleNewsBR() {\n  // Essayez le scheme si dispo, sinon édition BR PT\n  try {\n    await openUrl('googlenews://');\n  } catch {\n    // Edition Brésil, interface PT-BR\n    await openUrl('https://news.google.com/?hl=pt-BR&gl=BR&ceid=BR:pt-419');\n  }\n}\n\n// ---------------- Gmail ----------------\nexport async function openGmail({ to, subject, body } = {}) {\n  const qs = [\n    to ? `to=${enc(to)}` : '',\n    subject ? `subject=${enc(subject)}` : '',\n    body ? `body=${enc(body)}` : '',\n  ]\n    .filter(Boolean)\n    .join('&');\n\n  try {\n    await openUrl(`mailto:${to || ''}${qs ? `?${qs}` : ''}`);\n  } catch {\n    try {\n      await openUrl('googlegmail://');\n    } catch {\n      await openUrl('https://mail.google.com/');\n    }\n  }\n}\n"
    }
  ]
}
